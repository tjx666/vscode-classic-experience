{
    "name": "vscode-classic-experience",
    "displayName": "VSCode Keybindings for Cursor",
    "version": "2.0.3",
    "description": "Restore familiar VSCode keybindings in Cursor editor. Smooth transition for VSCode users.",
    "publisher": "YuTengjing",
    "private": true,
    "preview": true,
    "author": {
        "name": "YuTengjing",
        "email": "ytj2713151713@gmail.com",
        "url": "https://github.com/tjx666/tjx666"
    },
    "license": "SEE LICENSE IN LICENSE",
    "homepage": "https://github.com/tjx666/vscode-classic-experience/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/tjx666/vscode-classic-experience"
    },
    "bugs": {
        "url": "https://github.com/tjx666/vscode-classic-experience/issues",
        "email": "ytj2713151713@gmail.com"
    },
    "keywords": [
        "keybindings",
        "keymap",
        "shortcut",
        "importer",
        "settings",
        "vscode",
        "cursor",
        "ai",
        "claude",
        "gpt",
        "copilot",
        "cmd+k",
        "cmd+r",
        "keychord",
        "leader",
        "clear",
        "terminal"
    ],
    "categories": [
        "Keymaps"
    ],
    "main": "./out/src/extension.js",
    "icon": "assets/logo.png",
    "packageManager": "pnpm@9.14.2",
    "engines": {
        "vscode": "^1.93.0"
    },
    "badges": [
        {
            "url": "https://img.shields.io/badge/PRs-welcome-brightgreen.svg",
            "description": "PRs Welcome",
            "href": "https://github.com/tjx666/vscode-classic-experience/fork"
        }
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "contributes": {
        "keybindings": [
            {
                "key": "ctrl+m cmd+c",
                "command": "-editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly",
                "mac": "cmd+r cmd+c"
            },
            {
                "key": "ctrl+m cmd+f",
                "command": "-editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly",
                "mac": "cmd+r cmd+f"
            },
            {
                "key": "ctrl+m cmd+d",
                "command": "-editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus",
                "mac": "cmd+r cmd+d"
            },
            {
                "key": "ctrl+m alt+cmd+down",
                "command": "-editor.action.nextCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'",
                "mac": "cmd+r alt+cmd+down"
            },
            {
                "key": "ctrl+m alt+cmd+up",
                "command": "-editor.action.previousCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'",
                "mac": "cmd+r alt+cmd+up"
            },
            {
                "key": "ctrl+m cmd+u",
                "command": "-editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly",
                "mac": "cmd+r cmd+u"
            },
            {
                "key": "ctrl+m f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
                "mac": "cmd+r f12"
            },
            {
                "key": "ctrl+m cmd+f12",
                "command": "-editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor",
                "mac": "cmd+r cmd+f12"
            },
            {
                "key": "ctrl+m cmd+k",
                "command": "-editor.action.selectFromAnchorToCursor",
                "when": "editorTextFocus && selectionAnchorSet",
                "mac": "cmd+r cmd+k"
            },
            {
                "key": "ctrl+m cmd+b",
                "command": "-editor.action.setSelectionAnchor",
                "when": "editorTextFocus",
                "mac": "cmd+r cmd+b"
            },
            {
                "key": "ctrl+m cmd+i",
                "command": "-editor.action.showHover",
                "when": "editorTextFocus",
                "mac": "cmd+r cmd+i"
            },
            {
                "key": "ctrl+m cmd+x",
                "command": "-editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly",
                "mac": "cmd+r cmd+x"
            },
            {
                "key": "ctrl+m cmd+,",
                "command": "-editor.createFoldingRangeFromSelection",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+,"
            },
            {
                "key": "ctrl+m cmd+i",
                "command": "-editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode",
                "mac": "cmd+r cmd+i"
            },
            {
                "key": "ctrl+m cmd+0",
                "command": "-editor.foldAll",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+0"
            },
            {
                "key": "ctrl+m cmd+/",
                "command": "-editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+/"
            },
            {
                "key": "ctrl+m cmd+-",
                "command": "-editor.foldAllExcept",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+-"
            },
            {
                "key": "ctrl+m cmd+8",
                "command": "-editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+8"
            },
            {
                "key": "ctrl+m cmd+1",
                "command": "-editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+1"
            },
            {
                "key": "ctrl+m cmd+2",
                "command": "-editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+2"
            },
            {
                "key": "ctrl+m cmd+3",
                "command": "-editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+3"
            },
            {
                "key": "ctrl+m cmd+4",
                "command": "-editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+4"
            },
            {
                "key": "ctrl+m cmd+5",
                "command": "-editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+5"
            },
            {
                "key": "ctrl+m cmd+6",
                "command": "-editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+6"
            },
            {
                "key": "ctrl+m cmd+7",
                "command": "-editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+7"
            },
            {
                "key": "ctrl+m cmd+[",
                "command": "-editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+["
            },
            {
                "key": "ctrl+m cmd+.",
                "command": "-editor.removeManualFoldingRanges",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+."
            },
            {
                "key": "ctrl+m cmd+l",
                "command": "-editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+l"
            },
            {
                "key": "ctrl+m shift+cmd+l",
                "command": "-editor.toggleFoldRecursively",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r shift+cmd+l"
            },
            {
                "key": "ctrl+m cmd+j",
                "command": "-editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+j"
            },
            {
                "key": "ctrl+m cmd+=",
                "command": "-editor.unfoldAllExcept",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+="
            },
            {
                "key": "ctrl+m cmd+9",
                "command": "-editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+9"
            },
            {
                "key": "ctrl+m cmd+]",
                "command": "-editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+r cmd+]"
            },
            {
                "key": "ctrl+m f2",
                "command": "-togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible",
                "mac": "cmd+r f2"
            },
            {
                "key": "ctrl+m alt+cmd+c",
                "command": "-workbench.action.addComment",
                "mac": "cmd+r alt+cmd+c"
            },
            {
                "key": "ctrl+m cmd+g",
                "command": "-aiFeedback.action.open",
                "mac": "cmd+r cmd+g"
            },
            {
                "key": "ctrl+m alt+cmd+c",
                "command": "-copyFilePath",
                "when": "editorFocus",
                "mac": "cmd+r alt+cmd+c"
            },
            {
                "key": "ctrl+m shift+alt+cmd+c",
                "command": "-copyRelativeFilePath",
                "when": "editorFocus",
                "mac": "cmd+r shift+alt+cmd+c"
            },
            {
                "key": "ctrl+m cmd+k",
                "command": "-editor.action.defineKeybinding",
                "when": "resource == 'vscode-userdata:/Users/yutengjing/Library/Application%20Support/Cursor/User/keybindings.json'",
                "mac": "cmd+r cmd+k"
            },
            {
                "key": "ctrl+m i",
                "command": "-inlineChat.start",
                "when": "editorFocus && inlineChatHasProvider && !editorReadonly",
                "mac": "cmd+r i"
            },
            {
                "key": "ctrl+m cmd+a",
                "command": "-keybindings.editor.addKeybinding",
                "when": "inKeybindings && keybindingFocus",
                "mac": "cmd+r cmd+a"
            },
            {
                "key": "ctrl+m cmd+e",
                "command": "-keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus",
                "mac": "cmd+r cmd+e"
            },
            {
                "key": "ctrl+m cmd+i",
                "command": "-list.showHover",
                "when": "listFocus && !inputFocus && !treestickyScrollFocused",
                "mac": "cmd+r cmd+i"
            },
            {
                "key": "ctrl+m i",
                "command": "-notebook.cell.chat.start",
                "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus",
                "mac": "cmd+r i"
            },
            {
                "key": "ctrl+m cmd+c",
                "command": "-notebook.cell.collapseCellInput",
                "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed",
                "mac": "cmd+r cmd+c"
            },
            {
                "key": "ctrl+m t",
                "command": "-notebook.cell.collapseCellOutput",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed",
                "mac": "cmd+r t"
            },
            {
                "key": "ctrl+m cmd+c",
                "command": "-notebook.cell.expandCellInput",
                "when": "notebookCellInputIsCollapsed && notebookCellListFocused",
                "mac": "cmd+r cmd+c"
            },
            {
                "key": "ctrl+m t",
                "command": "-notebook.cell.expandCellOutput",
                "when": "notebookCellListFocused && notebookCellOutputIsCollapsed",
                "mac": "cmd+r t"
            },
            {
                "key": "ctrl+m shift+cmd+\\",
                "command": "-notebook.cell.split",
                "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused",
                "mac": "cmd+r shift+cmd+\\"
            },
            {
                "key": "ctrl+m y",
                "command": "-notebook.cell.toggleOutputScrolling",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus",
                "mac": "cmd+r y"
            },
            {
                "key": "ctrl+m shift+cmd+n",
                "command": "-notifications.showList",
                "mac": "cmd+r shift+cmd+n"
            },
            {
                "key": "ctrl+m cmd+w",
                "command": "-workbench.action.closeAllEditors",
                "mac": "cmd+r cmd+w"
            },
            {
                "key": "ctrl+m shift+cmd+w",
                "command": "-workbench.action.closeAllGroups",
                "mac": "cmd+r shift+cmd+w"
            },
            {
                "key": "ctrl+m w",
                "command": "-workbench.action.closeEditorsInGroup",
                "mac": "cmd+r w"
            },
            {
                "key": "ctrl+m f",
                "command": "-workbench.action.closeFolder",
                "when": "emptyWorkspaceSupport && workbenchState != 'empty'",
                "mac": "cmd+r f"
            },
            {
                "key": "ctrl+m u",
                "command": "-workbench.action.closeUnmodifiedEditors",
                "mac": "cmd+r u"
            },
            {
                "key": "ctrl+m shift+o",
                "command": "-workbench.action.compareEditor.openSide",
                "when": "inDiffEditor",
                "mac": "cmd+r shift+o"
            },
            {
                "key": "ctrl+m o",
                "command": "-workbench.action.copyEditorToNewWindow",
                "when": "activeEditor",
                "mac": "cmd+r o"
            },
            {
                "key": "ctrl+m m",
                "command": "-workbench.action.editor.changeLanguageMode",
                "when": "!notebookEditorFocused",
                "mac": "cmd+r m"
            },
            {
                "key": "ctrl+m p",
                "command": "-workbench.action.files.copyPathOfActiveFile",
                "mac": "cmd+r p"
            },
            {
                "key": "ctrl+m r",
                "command": "-workbench.action.files.revealActiveFileInWindows",
                "mac": "cmd+r r"
            },
            {
                "key": "ctrl+m s",
                "command": "-workbench.action.files.saveWithoutFormatting",
                "mac": "cmd+r s"
            },
            {
                "key": "ctrl+m cmd+up",
                "command": "-workbench.action.focusAboveGroup",
                "mac": "cmd+r cmd+up"
            },
            {
                "key": "ctrl+m cmd+down",
                "command": "-workbench.action.focusBelowGroup",
                "mac": "cmd+r cmd+down"
            },
            {
                "key": "ctrl+m cmd+left",
                "command": "-workbench.action.focusLeftGroup",
                "mac": "cmd+r cmd+left"
            },
            {
                "key": "ctrl+m cmd+right",
                "command": "-workbench.action.focusRightGroup",
                "mac": "cmd+r cmd+right"
            },
            {
                "key": "ctrl+m shift+cmd+\\",
                "command": "-workbench.action.joinEditorInGroup",
                "when": "sideBySideEditorActive",
                "mac": "cmd+r shift+cmd+\\"
            },
            {
                "key": "ctrl+m enter",
                "command": "-workbench.action.keepEditor",
                "mac": "cmd+r enter"
            },
            {
                "key": "ctrl+m down",
                "command": "-workbench.action.moveActiveEditorGroupDown",
                "mac": "cmd+r down"
            },
            {
                "key": "ctrl+m left",
                "command": "-workbench.action.moveActiveEditorGroupLeft",
                "mac": "cmd+r left"
            },
            {
                "key": "ctrl+m right",
                "command": "-workbench.action.moveActiveEditorGroupRight",
                "mac": "cmd+r right"
            },
            {
                "key": "ctrl+m up",
                "command": "-workbench.action.moveActiveEditorGroupUp",
                "mac": "cmd+r up"
            },
            {
                "key": "ctrl+m shift+cmd+left",
                "command": "-workbench.action.moveEditorLeftInGroup",
                "mac": "cmd+r shift+cmd+left"
            },
            {
                "key": "ctrl+m shift+cmd+right",
                "command": "-workbench.action.moveEditorRightInGroup",
                "mac": "cmd+r shift+cmd+right"
            },
            {
                "key": "ctrl+m cmd+q",
                "command": "-workbench.action.navigateToLastEditLocation",
                "mac": "cmd+r cmd+q"
            },
            {
                "key": "ctrl+m alt+cmd+right",
                "command": "-workbench.action.nextEditorInGroup",
                "mac": "cmd+r alt+cmd+right"
            },
            {
                "key": "ctrl+m cmd+s",
                "command": "-workbench.action.openGlobalKeybindings",
                "mac": "cmd+r cmd+s"
            },
            {
                "key": "ctrl+m shift+enter",
                "command": "-workbench.action.pinEditor",
                "when": "!activeEditorIsPinned",
                "mac": "cmd+r shift+enter"
            },
            {
                "key": "ctrl+m alt+cmd+left",
                "command": "-workbench.action.previousEditorInGroup",
                "mac": "cmd+r alt+cmd+left"
            },
            {
                "key": "ctrl+m cmd+t",
                "command": "-workbench.action.selectTheme",
                "mac": "cmd+r cmd+t"
            },
            {
                "key": "ctrl+m cmd+\\",
                "command": "-workbench.action.splitEditorDown",
                "mac": "cmd+r cmd+\\"
            },
            {
                "key": "ctrl+m shift+cmd+\\",
                "command": "-workbench.action.splitEditorInGroup",
                "when": "activeEditorCanSplitInGroup",
                "mac": "cmd+r shift+cmd+\\"
            },
            {
                "key": "ctrl+m cmd+\\",
                "command": "-workbench.action.splitEditorLeft",
                "mac": "cmd+r cmd+\\"
            },
            {
                "key": "ctrl+m cmd+\\",
                "command": "-workbench.action.splitEditorOrthogonal",
                "mac": "cmd+r cmd+\\"
            },
            {
                "key": "ctrl+m cmd+\\",
                "command": "-workbench.action.splitEditorRight",
                "mac": "cmd+r cmd+\\"
            },
            {
                "key": "ctrl+m cmd+\\",
                "command": "-workbench.action.splitEditorUp",
                "mac": "cmd+r cmd+\\"
            },
            {
                "key": "ctrl+m cmd+i",
                "command": "-workbench.action.terminal.focusHover",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus",
                "mac": "cmd+r cmd+i"
            },
            {
                "key": "ctrl+m cmd+m",
                "command": "-workbench.action.toggleMaximizeEditorGroup",
                "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups",
                "mac": "cmd+r cmd+m"
            },
            {
                "key": "ctrl+m z",
                "command": "-workbench.action.toggleZenMode",
                "when": "!isAuxiliaryWindowFocusedContext",
                "mac": "cmd+r z"
            },
            {
                "key": "ctrl+m shift+enter",
                "command": "-workbench.action.unpinEditor",
                "when": "activeEditorIsPinned",
                "mac": "cmd+r shift+enter"
            },
            {
                "key": "ctrl+m c",
                "command": "-workbench.files.action.compareWithClipboard",
                "mac": "cmd+r c"
            },
            {
                "key": "ctrl+m d",
                "command": "-workbench.files.action.compareWithSaved",
                "mac": "cmd+r d"
            },
            {
                "key": "ctrl+m e",
                "command": "-workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active",
                "mac": "cmd+r e"
            },
            {
                "key": "ctrl+m down",
                "command": "-views.moveViewDown",
                "when": "focusedView != ''",
                "mac": "cmd+r down"
            },
            {
                "key": "ctrl+m left",
                "command": "-views.moveViewLeft",
                "when": "focusedView != ''",
                "mac": "cmd+r left"
            },
            {
                "key": "ctrl+m right",
                "command": "-views.moveViewRight",
                "when": "focusedView != ''",
                "mac": "cmd+r right"
            },
            {
                "key": "ctrl+m up",
                "command": "-views.moveViewUp",
                "when": "focusedView != ''",
                "mac": "cmd+r up"
            },
            {
                "key": "ctrl+k cmd+c",
                "command": "editor.action.addCommentLine",
                "when": "editorTextFocus && !editorReadonly",
                "mac": "cmd+k cmd+c"
            },
            {
                "key": "ctrl+k cmd+f",
                "command": "editor.action.formatSelection",
                "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly",
                "mac": "cmd+k cmd+f"
            },
            {
                "key": "ctrl+k cmd+d",
                "command": "editor.action.moveSelectionToNextFindMatch",
                "when": "editorFocus",
                "mac": "cmd+k cmd+d"
            },
            {
                "key": "ctrl+k alt+cmd+down",
                "command": "editor.action.nextCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'",
                "mac": "cmd+k alt+cmd+down"
            },
            {
                "key": "ctrl+k alt+cmd+up",
                "command": "editor.action.previousCommentingRange",
                "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'",
                "mac": "cmd+k alt+cmd+up"
            },
            {
                "key": "ctrl+k cmd+u",
                "command": "editor.action.removeCommentLine",
                "when": "editorTextFocus && !editorReadonly",
                "mac": "cmd+k cmd+u"
            },
            {
                "key": "ctrl+k f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
                "mac": "cmd+k f12"
            },
            {
                "key": "ctrl+k cmd+f12",
                "command": "editor.action.revealDefinitionAside",
                "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor",
                "mac": "cmd+k cmd+f12"
            },
            {
                "key": "ctrl+k cmd+k",
                "command": "editor.action.selectFromAnchorToCursor",
                "when": "editorTextFocus && selectionAnchorSet",
                "mac": "cmd+k cmd+k"
            },
            {
                "key": "ctrl+k cmd+b",
                "command": "editor.action.setSelectionAnchor",
                "when": "editorTextFocus",
                "mac": "cmd+k cmd+b"
            },
            {
                "key": "ctrl+k cmd+i",
                "command": "editor.action.showHover",
                "when": "editorTextFocus",
                "mac": "cmd+k cmd+i"
            },
            {
                "key": "ctrl+k cmd+x",
                "command": "editor.action.trimTrailingWhitespace",
                "when": "editorTextFocus && !editorReadonly",
                "mac": "cmd+k cmd+x"
            },
            {
                "key": "ctrl+k cmd+,",
                "command": "editor.createFoldingRangeFromSelection",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+,"
            },
            {
                "key": "ctrl+k cmd+i",
                "command": "editor.debug.action.showDebugHover",
                "when": "editorTextFocus && inDebugMode",
                "mac": "cmd+k cmd+i"
            },
            {
                "key": "ctrl+k cmd+0",
                "command": "editor.foldAll",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+0"
            },
            {
                "key": "ctrl+k cmd+/",
                "command": "editor.foldAllBlockComments",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+/"
            },
            {
                "key": "ctrl+k cmd+-",
                "command": "editor.foldAllExcept",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+-"
            },
            {
                "key": "ctrl+k cmd+8",
                "command": "editor.foldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+8"
            },
            {
                "key": "ctrl+k cmd+1",
                "command": "editor.foldLevel1",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+1"
            },
            {
                "key": "ctrl+k cmd+2",
                "command": "editor.foldLevel2",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+2"
            },
            {
                "key": "ctrl+k cmd+3",
                "command": "editor.foldLevel3",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+3"
            },
            {
                "key": "ctrl+k cmd+4",
                "command": "editor.foldLevel4",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+4"
            },
            {
                "key": "ctrl+k cmd+5",
                "command": "editor.foldLevel5",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+5"
            },
            {
                "key": "ctrl+k cmd+6",
                "command": "editor.foldLevel6",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+6"
            },
            {
                "key": "ctrl+k cmd+7",
                "command": "editor.foldLevel7",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+7"
            },
            {
                "key": "ctrl+k cmd+[",
                "command": "editor.foldRecursively",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+["
            },
            {
                "key": "ctrl+k cmd+.",
                "command": "editor.removeManualFoldingRanges",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+."
            },
            {
                "key": "ctrl+k cmd+l",
                "command": "editor.toggleFold",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+l"
            },
            {
                "key": "ctrl+k shift+cmd+l",
                "command": "editor.toggleFoldRecursively",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k shift+cmd+l"
            },
            {
                "key": "ctrl+k cmd+j",
                "command": "editor.unfoldAll",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+j"
            },
            {
                "key": "ctrl+k cmd+=",
                "command": "editor.unfoldAllExcept",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+="
            },
            {
                "key": "ctrl+k cmd+9",
                "command": "editor.unfoldAllMarkerRegions",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+9"
            },
            {
                "key": "ctrl+k cmd+]",
                "command": "editor.unfoldRecursively",
                "when": "editorTextFocus && foldingEnabled",
                "mac": "cmd+k cmd+]"
            },
            {
                "key": "ctrl+k f2",
                "command": "togglePeekWidgetFocus",
                "when": "inReferenceSearchEditor || referenceSearchVisible",
                "mac": "cmd+k f2"
            },
            {
                "key": "ctrl+k alt+cmd+c",
                "command": "workbench.action.addComment",
                "mac": "cmd+k alt+cmd+c"
            },
            {
                "key": "ctrl+k cmd+g",
                "command": "aiFeedback.action.open",
                "mac": "cmd+k cmd+g"
            },
            {
                "key": "ctrl+k alt+cmd+c",
                "command": "copyFilePath",
                "when": "editorFocus",
                "mac": "cmd+k alt+cmd+c"
            },
            {
                "key": "ctrl+k shift+alt+cmd+c",
                "command": "copyRelativeFilePath",
                "when": "editorFocus",
                "mac": "cmd+k shift+alt+cmd+c"
            },
            {
                "key": "ctrl+k cmd+k",
                "command": "editor.action.defineKeybinding",
                "when": "resource == 'vscode-userdata:/Users/yutengjing/Library/Application%20Support/Cursor/User/keybindings.json'",
                "mac": "cmd+k cmd+k"
            },
            {
                "key": "ctrl+k i",
                "command": "inlineChat.start",
                "when": "editorFocus && inlineChatHasProvider && !editorReadonly",
                "mac": "cmd+k i"
            },
            {
                "key": "ctrl+k cmd+a",
                "command": "keybindings.editor.addKeybinding",
                "when": "inKeybindings && keybindingFocus",
                "mac": "cmd+k cmd+a"
            },
            {
                "key": "ctrl+k cmd+e",
                "command": "keybindings.editor.defineWhenExpression",
                "when": "inKeybindings && keybindingFocus",
                "mac": "cmd+k cmd+e"
            },
            {
                "key": "ctrl+k cmd+i",
                "command": "list.showHover",
                "when": "listFocus && !inputFocus && !treestickyScrollFocused",
                "mac": "cmd+k cmd+i"
            },
            {
                "key": "ctrl+k i",
                "command": "notebook.cell.chat.start",
                "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus",
                "mac": "cmd+k i"
            },
            {
                "key": "ctrl+k cmd+c",
                "command": "notebook.cell.collapseCellInput",
                "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed",
                "mac": "cmd+k cmd+c"
            },
            {
                "key": "ctrl+k t",
                "command": "notebook.cell.collapseCellOutput",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed",
                "mac": "cmd+k t"
            },
            {
                "key": "ctrl+k cmd+c",
                "command": "notebook.cell.expandCellInput",
                "when": "notebookCellInputIsCollapsed && notebookCellListFocused",
                "mac": "cmd+k cmd+c"
            },
            {
                "key": "ctrl+k t",
                "command": "notebook.cell.expandCellOutput",
                "when": "notebookCellListFocused && notebookCellOutputIsCollapsed",
                "mac": "cmd+k t"
            },
            {
                "key": "ctrl+k shift+cmd+\\",
                "command": "notebook.cell.split",
                "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused",
                "mac": "cmd+k shift+cmd+\\"
            },
            {
                "key": "ctrl+k y",
                "command": "notebook.cell.toggleOutputScrolling",
                "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus",
                "mac": "cmd+k y"
            },
            {
                "key": "ctrl+k shift+cmd+n",
                "command": "notifications.showList",
                "mac": "cmd+k shift+cmd+n"
            },
            {
                "key": "ctrl+k cmd+w",
                "command": "workbench.action.closeAllEditors",
                "mac": "cmd+k cmd+w"
            },
            {
                "key": "ctrl+k shift+cmd+w",
                "command": "workbench.action.closeAllGroups",
                "mac": "cmd+k shift+cmd+w"
            },
            {
                "key": "ctrl+k w",
                "command": "workbench.action.closeEditorsInGroup",
                "mac": "cmd+k w"
            },
            {
                "key": "ctrl+k f",
                "command": "workbench.action.closeFolder",
                "when": "emptyWorkspaceSupport && workbenchState != 'empty'",
                "mac": "cmd+k f"
            },
            {
                "key": "ctrl+k u",
                "command": "workbench.action.closeUnmodifiedEditors",
                "mac": "cmd+k u"
            },
            {
                "key": "ctrl+k shift+o",
                "command": "workbench.action.compareEditor.openSide",
                "when": "inDiffEditor",
                "mac": "cmd+k shift+o"
            },
            {
                "key": "ctrl+k o",
                "command": "workbench.action.copyEditorToNewWindow",
                "when": "activeEditor",
                "mac": "cmd+k o"
            },
            {
                "key": "ctrl+k m",
                "command": "workbench.action.editor.changeLanguageMode",
                "when": "!notebookEditorFocused",
                "mac": "cmd+k m"
            },
            {
                "key": "ctrl+k p",
                "command": "workbench.action.files.copyPathOfActiveFile",
                "mac": "cmd+k p"
            },
            {
                "key": "ctrl+k r",
                "command": "workbench.action.files.revealActiveFileInWindows",
                "mac": "cmd+k r"
            },
            {
                "key": "ctrl+k s",
                "command": "workbench.action.files.saveWithoutFormatting",
                "mac": "cmd+k s"
            },
            {
                "key": "ctrl+k cmd+up",
                "command": "workbench.action.focusAboveGroup",
                "mac": "cmd+k cmd+up"
            },
            {
                "key": "ctrl+k cmd+down",
                "command": "workbench.action.focusBelowGroup",
                "mac": "cmd+k cmd+down"
            },
            {
                "key": "ctrl+k cmd+left",
                "command": "workbench.action.focusLeftGroup",
                "mac": "cmd+k cmd+left"
            },
            {
                "key": "ctrl+k cmd+right",
                "command": "workbench.action.focusRightGroup",
                "mac": "cmd+k cmd+right"
            },
            {
                "key": "ctrl+k shift+cmd+\\",
                "command": "workbench.action.joinEditorInGroup",
                "when": "sideBySideEditorActive",
                "mac": "cmd+k shift+cmd+\\"
            },
            {
                "key": "ctrl+k enter",
                "command": "workbench.action.keepEditor",
                "mac": "cmd+k enter"
            },
            {
                "key": "ctrl+k down",
                "command": "workbench.action.moveActiveEditorGroupDown",
                "mac": "cmd+k down"
            },
            {
                "key": "ctrl+k left",
                "command": "workbench.action.moveActiveEditorGroupLeft",
                "mac": "cmd+k left"
            },
            {
                "key": "ctrl+k right",
                "command": "workbench.action.moveActiveEditorGroupRight",
                "mac": "cmd+k right"
            },
            {
                "key": "ctrl+k up",
                "command": "workbench.action.moveActiveEditorGroupUp",
                "mac": "cmd+k up"
            },
            {
                "key": "ctrl+k shift+cmd+left",
                "command": "workbench.action.moveEditorLeftInGroup",
                "mac": "cmd+k shift+cmd+left"
            },
            {
                "key": "ctrl+k shift+cmd+right",
                "command": "workbench.action.moveEditorRightInGroup",
                "mac": "cmd+k shift+cmd+right"
            },
            {
                "key": "ctrl+k cmd+q",
                "command": "workbench.action.navigateToLastEditLocation",
                "mac": "cmd+k cmd+q"
            },
            {
                "key": "ctrl+k alt+cmd+right",
                "command": "workbench.action.nextEditorInGroup",
                "mac": "cmd+k alt+cmd+right"
            },
            {
                "key": "ctrl+k cmd+s",
                "command": "workbench.action.openGlobalKeybindings",
                "mac": "cmd+k cmd+s"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "workbench.action.pinEditor",
                "when": "!activeEditorIsPinned",
                "mac": "cmd+k shift+enter"
            },
            {
                "key": "ctrl+k alt+cmd+left",
                "command": "workbench.action.previousEditorInGroup",
                "mac": "cmd+k alt+cmd+left"
            },
            {
                "key": "ctrl+k cmd+t",
                "command": "workbench.action.selectTheme",
                "mac": "cmd+k cmd+t"
            },
            {
                "key": "ctrl+k cmd+\\",
                "command": "workbench.action.splitEditorDown",
                "mac": "cmd+k cmd+\\"
            },
            {
                "key": "ctrl+k shift+cmd+\\",
                "command": "workbench.action.splitEditorInGroup",
                "when": "activeEditorCanSplitInGroup",
                "mac": "cmd+k shift+cmd+\\"
            },
            {
                "key": "ctrl+k cmd+\\",
                "command": "workbench.action.splitEditorLeft",
                "mac": "cmd+k cmd+\\"
            },
            {
                "key": "ctrl+k cmd+\\",
                "command": "workbench.action.splitEditorOrthogonal",
                "mac": "cmd+k cmd+\\"
            },
            {
                "key": "ctrl+k cmd+\\",
                "command": "workbench.action.splitEditorRight",
                "mac": "cmd+k cmd+\\"
            },
            {
                "key": "ctrl+k cmd+\\",
                "command": "workbench.action.splitEditorUp",
                "mac": "cmd+k cmd+\\"
            },
            {
                "key": "ctrl+k cmd+i",
                "command": "workbench.action.terminal.focusHover",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus",
                "mac": "cmd+k cmd+i"
            },
            {
                "key": "ctrl+k cmd+m",
                "command": "workbench.action.toggleMaximizeEditorGroup",
                "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups",
                "mac": "cmd+k cmd+m"
            },
            {
                "key": "ctrl+k z",
                "command": "workbench.action.toggleZenMode",
                "when": "!isAuxiliaryWindowFocusedContext",
                "mac": "cmd+k z"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "workbench.action.unpinEditor",
                "when": "activeEditorIsPinned",
                "mac": "cmd+k shift+enter"
            },
            {
                "key": "ctrl+k c",
                "command": "workbench.files.action.compareWithClipboard",
                "mac": "cmd+k c"
            },
            {
                "key": "ctrl+k d",
                "command": "workbench.files.action.compareWithSaved",
                "mac": "cmd+k d"
            },
            {
                "key": "ctrl+k e",
                "command": "workbench.files.action.focusOpenEditorsView",
                "when": "workbench.explorer.openEditorsView.active",
                "mac": "cmd+k e"
            },
            {
                "key": "ctrl+k down",
                "command": "views.moveViewDown",
                "when": "focusedView != ''",
                "mac": "cmd+k down"
            },
            {
                "key": "ctrl+k left",
                "command": "views.moveViewLeft",
                "when": "focusedView != ''",
                "mac": "cmd+k left"
            },
            {
                "key": "ctrl+k right",
                "command": "views.moveViewRight",
                "when": "focusedView != ''",
                "mac": "cmd+k right"
            },
            {
                "key": "ctrl+k up",
                "command": "views.moveViewUp",
                "when": "focusedView != ''",
                "mac": "cmd+k up"
            },
            {
                "key": "ctrl+k",
                "command": "-aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible",
                "args": {
                    "invocationType": "new"
                },
                "mac": "cmd+k"
            },
            {
                "key": "ctrl+k",
                "command": "-cursorai.action.generateInTerminal",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
                "mac": "cmd+k"
            },
            {
                "key": "ctrl+e",
                "command": "aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible",
                "args": {
                    "invocationType": "new"
                },
                "mac": "cmd+e"
            },
            {
                "key": "ctrl+e",
                "command": "cursorai.action.generateInTerminal",
                "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
                "mac": "cmd+e"
            },
            {
                "key": "shift+ctrl+k",
                "mac": "shift+cmd+k",
                "command": "-aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible",
                "args": {
                    "invocationType": "toggle"
                }
            },
            {
                "key": "alt+shift+i",
                "mac": "cmd+shift+i",
                "command": "aipopup.action.modal.generate",
                "when": "editorFocus && !composerBarIsVisible",
                "args": {
                    "invocationType": "toggle"
                }
            },
            {
                "key": "ctrl+l",
                "mac": "cmd+l",
                "command": "-aichat.newchataction"
            },
            {
                "key": "shift+ctrl+l",
                "mac": "shift+cmd+l",
                "command": "-aichat.insertselectionintochat"
            },
            {
                "key": "ctrl+]",
                "mac": "cmd+]",
                "command": "aichat.newchataction",
                "when": "!view.workbench.panel.aichat.view.visible"
            },
            {
                "key": "ctrl+]",
                "mac": "cmd+]",
                "command": "aichat.close-sidebar",
                "when": "view.workbench.panel.aichat.view.visible"
            },
            {
                "key": "shift+ctrl+]",
                "mac": "shift+cmd+]",
                "command": "aichat.insertselectionintochat"
            },
            {
                "key": "ctrl+l",
                "mac": "cmd+l",
                "command": "expandLineSelection",
                "when": "textInputFocus"
            },
            {
                "key": "shift+ctrl+k",
                "mac": "shift+cmd+k",
                "command": "workbench.action.terminal.clear",
                "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
            },
            {
                "key": "ctrl+m",
                "mac": "cmd+r",
                "command": "-workbench.action.keychord.leader",
                "when": "false"
            }
        ]
    },
    "eslintConfig": {
        "extends": "@yutengjing/eslint-config-typescript",
        "reportUnusedDisableDirectives": false,
        "ignorePatterns": [
            "test-workspace"
        ]
    },
    "prettier": "@yutengjing/prettier-config",
    "lint-staged": {
        "*.{ts,json,md}": [
            "eslint --fix",
            "prettier --write"
        ]
    },
    "simple-git-hooks": {
        "pre-commit": "npx lint-staged"
    },
    "scripts": {
        "vscode:prepublish": "pnpm esbuild:base --minify",
        "preinstall": "npx only-allow pnpm",
        "postinstall": "stale-dep -u",
        "prepare": "simple-git-hooks",
        "clean": "npx rimraf -rf ./out",
        "reset-keybindings": "node-jq '.contributes.keybindings = []' package.json",
        "esbuild:base": "stale-dep && tsx scripts/esbuild.ts",
        "esbuild:watch": "pnpm esbuild:base --sourcemap --watch",
        "esbuild:analyze": "pnpm esbuild:base --minify --metafile --analyze && esbuild-visualizer --metadata ./meta.json --open",
        "compile:test": "pnpm clean && tsc -b ./test/tsconfig.json",
        "lint": "eslint src --ext ts",
        "test": "stale-dep && pnpm compile:test && node ./out/test/runTests.js",
        "package": "vsce package --no-dependencies",
        "release": "npx @yutengjing/release",
        "publish:vs-marketplace": "vsce publish --no-dependencies"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.10",
        "@types/node": "~20.17.6",
        "@types/vscode": "~1.93.0",
        "@vscode/test-electron": "^2.4.1",
        "@vscode/vsce": "^3.2.1",
        "@yutengjing/eslint-config-typescript": "^1.3.0",
        "@yutengjing/prettier-config": "^1.3.0",
        "@yutengjing/release": "^0.3.1",
        "esbuild": "~0.24.0",
        "esbuild-visualizer": "^0.6.0",
        "eslint": "^8.57.1",
        "glob": "^11.0.0",
        "jsonc-parser": "^3.3.1",
        "lint-staged": "^15.2.10",
        "mocha": "^10.8.2",
        "node-jq": "^6.0.1",
        "prettier": "^3.3.3",
        "rimraf": "^6.0.1",
        "simple-git-hooks": "^2.11.1",
        "stale-dep": "^0.7.0",
        "tsx": "^4.19.2",
        "typescript": "~5.6.3"
    }
}
